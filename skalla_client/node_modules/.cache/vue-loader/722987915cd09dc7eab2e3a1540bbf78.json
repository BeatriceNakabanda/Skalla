{"remainingRequest":"/media/beatrice/AA5A6A6A5A6A336D1/templates/1/new/Estimation-System/skalla_client/node_modules/vue-loader/lib/index.js??vue-loader-options!/media/beatrice/AA5A6A6A5A6A336D1/templates/1/new/Estimation-System/skalla_client/src/views/Forms/EditEstimateForm.vue?vue&type=script&lang=js&","dependencies":[{"path":"/media/beatrice/AA5A6A6A5A6A336D1/templates/1/new/Estimation-System/skalla_client/src/views/Forms/EditEstimateForm.vue","mtime":1580896018792},{"path":"/media/beatrice/AA5A6A6A5A6A336D1/templates/1/new/Estimation-System/skalla_client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/media/beatrice/AA5A6A6A5A6A336D1/templates/1/new/Estimation-System/skalla_client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/media/beatrice/AA5A6A6A5A6A336D1/templates/1/new/Estimation-System/skalla_client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport axios from 'axios';\nimport flatPicker from \"vue-flatpickr-component\";\nimport \"flatpickr/dist/flatpickr.css\";\n// import AuthService from \"../../services/AuthService\";\nexport default {\n    name: 'edit-estimate-form',\n    components: {\n        flatPicker\n        },\n    props: {\n        // estimates: Array,\n        // type: {\n            // type: String\n        // },\n        estimateId: String\n        },\n    data(){\n        return{\n            selectedProject: '',\n            selectedDeveloper: '',\n            error: false,\n            submitting: false,\n            success: false,\n            projects: [],\n            developers: [],\n           \n        estimate:\n          {\n            selectedProject: '',\n            selectedDeveloper: '',\n            status: '',\n            statusType: '',\n            dueDate: '',\n            title: '',\n            taskDescription: '',\n          },\n        newEstimate:{\n            project: '',\n            developer: '',\n            status: '',\n            statusType: '',\n            dueDate: '',\n            title: '',\n            taskDescription: '',\n          }\n        }\n        \n    },\n     // automatically computed properties(functions) to validate form inputs \n    computed: {\n        // invalidProjectName(){\n        //     return this.estimate.project === ''\n        // },\n        // invalidDeveloper(){\n        //     return this.estimate.developers === ''\n        // },\n        // invalidDueDate(){\n        //     return this.estimate.dueDate === ''\n        // },\n        // invalidTitle(){\n        //     return this.estimate.title === ''\n        // },\n        // invalidTaskDescription(){\n        //     return this.estimate.taskDescription === ''\n        // }\n    },\n    methods: {\n                  handleEditt(estimateId){\n            this.submitting = true\n            this.clearForm()\n            \n           \n            // let newEstimateId = this.openEditModel(estimateId)\n            // console.log(newEstimateId)\n            console.log(estimateId)\n           \n            const editedEstimate = {\n                  project: this.newEstimate.project.id,\n                  developer: this.newEstimate.developer.id,\n                  dueDate: this.newEstimate.dueDate,\n                  title: this.newEstimate.title,\n                  taskDescription: this.newEstimate.taskDescription,\n                  projectManager: this.$store.getters.getUser.id\n              }\n             \n              console.log(editedEstimate)\n            axios.put(`api/estimate-request/` + estimateId , editedEstimate)\n                  .then((response) =>{\n                      console.log(response);\n                  })\n                  .catch((error) => {\n                      console.log(error);\n                  });\n                  this.success = true\n                  this.error = false\n     \n          },\n          handleCancel(){\n            this.editDraftModal = false\n          },\n                    async handleSendRequest(estimateId){\n            // let newEstimateId = this.openEditModel(estimateId)\n            let editedEstimate = {\n                  project: this.estimate.project.id,\n                  developer: this.estimate.developer.id,\n                  dueDate: this.estimate.dueDate,\n                  title: this.estimate.title,\n                  taskDescription: this.estimate.taskDescription,\n                  projectManager: this.$store.getters.getUser.id,\n                  status: this.estimate.status = \"Submitted\"\n              }\n              console.log(editedEstimate)\n            axios.put(`api/estimate-request/` + estimateId , editedEstimate)\n                  .then((response) =>{\n                      console.log(response);\n                  })\n                  .catch((error) => {\n                      console.log(error);\n                  });\n          },\n                    async handleSendRequest2(estimateId){\n            let newEstimateId = this.openSendRequestModel(estimateId)\n            \n            let editedEstimate = {\n                  status: this.estimate.status = \"Submitted\"\n              }\n            axios.put(`api/estimate-request/` + newEstimateId , editedEstimate)\n                  .then((response) =>{\n                      console.log(response);\n                  })\n                  .catch((error) => {\n                      console.log(error);\n                  });\n          },\n            \n    clearForm(){\n                this.success = false\n                this.error = false\n            },\n      handleSave() {\n      console.log('testing save' )\n      },  \n    },\n    async created(){\n      try{\n        const response = await axios.get(`api/projects`)\n        const resp = await axios.get(`api/users/developers`)\n        // const respons = await axios.get(`api/estimate-request/5e202bf35dfb7025a93e779d` )\n        // const res = await axios.get(`api/estimate-request/` + this.$route.params.id)\n        // this.estimates = res.data;\n        // this.estimate = res.data; \n        // console.log(res)\n        this.projects = response.data;\n        this.developers = resp.data;\n        // this.estimate = respons.data;\n        // window.location.reload();\n        // console.log(this.projects)\n        // console.log(this.estimate)\n        \n      }catch(e){\n        console.error(e)\n        \n      }\n      \n    },\n   \n    \n    \n}\n",{"version":3,"sources":["EditEstimateForm.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;;;AAIA","file":"EditEstimateForm.vue","sourceRoot":"src/views/Forms","sourcesContent":["<template>\n                          <form method=\"POST\" role=\"form\" >\n                            <div >\n                                <div class=\"row\">\n                                <div class=\"col-sm-3\">          \n                                    <h6 class=\"heading-small text-muted mb-4 float-left\">Project</h6>\n                                </div>\n                                <div class=\"col-sm\">\n                                    <base-input alternative\n                                            ref=\"first\"\n                                            class=\"mb-3\"\n                                            placeholder=\"Add project here...\" \n                                            \n                                            @keypress=\"clearForm\"\n                                          >\n                                            <select class=\"custom-select\" id=\"inputGroupSelect01\" v-model=\"newEstimate.project\">\n                                            <option value=\"\" disabled>Please select a project</option>\n                                            <option v-for=\"project in projects\" v-bind:value=\"{id: project._id, name: project.name}\">{{project.name}}</option>\n                                            </select>\n                                </base-input>\n                                </div>\n                                </div>\n                                <div class=\"row\">\n                                <div class=\"col-sm-3\">\n                                    <h6 class=\"heading-small text-muted mb-4 float-left\">Assign to</h6>\n                                </div>\n                                <div class=\"col-sm\">\n                                    <base-input alternative\n                                            class=\"mb-3\"\n                                            placeholder=\"Add developer here...\"\n                                          \n                                            >\n                                            <select class=\"custom-select\" id=\"inputGroupSelect01\" v-model=\"newEstimate.developer\">\n                                                <option value=\"\" disabled>Please select a developer</option>\n                                                <option  v-for=\"developer in developers\" v-bind:value=\"{id: developer._id, name: developer.name}\"> {{developer.name}}</option>\n                                            </select>\n                                </base-input>\n                                <!-- <p>id: {{selectedProject.id}}</p>\n                                <p>name: {{selectedProject.name}}</p>\n                                <p>id: {{selectedDeveloper.id}}</p>\n                                <p>name: {{selectedDeveloper.name}}</p> -->\n\n                                </div>\n                                </div>\n                                <div class=\"row\">\n                                <div class=\"col-sm-3\">\n                                    <h6 class=\"heading-small text-muted mb-4 float-left\">Due Date</h6>\n                                </div>\n                                <div class=\"col-sm\">\n                                    <base-input addon-left-icon=\"ni ni-calendar-grid-58\">\n                                        <flat-picker slot-scope=\"{focus, blur}\"\n                                                    @on-open=\"focus\"\n                                                    @on-close=\"blur\"\n                                                    :config=\"{allowInput: true, dateFormat: 'd-m-Y'}\"\n                                                    \n                                                    class=\"form-control datepicker\"\n                                                    :class=\"{ 'has-error': submitting  }\"\n                                                    v-model=\"newEstimate.dueDate\"\n                                                    >\n                                        </flat-picker>\n                                    </base-input>\n                                </div>\n                                </div>\n                                <div class=\"row\">\n                                    <div class=\"col-sm-3\">\n                                        <h6 class=\"heading-small text-muted mb-4 float-left\">Title</h6>\n                                    </div>\n                                    <div class=\"col-sm\">\n                                        <base-input alternative\n                                                class=\"mb-3\"\n                                                \n                                                v-model=\"newEstimate.title\"\n                                                :class=\"{ 'has-error': submitting  }\"\n                                            >\n                                    </base-input>\n                                    </div>\n                                </div>\n                                <div class=\"row\">\n                                <div class=\"col-sm-5\">\n                                    <h6 class=\"heading-small text-muted mb-4 float-left\">Main Task Description </h6>\n                                </div>\n                                <div class=\"col-sm-12\">\n                                    <base-input alternative=\"\"\n                                    :class=\"{ 'has-error': submitting }\">\n                                        <textarea rows=\"4\" \n                                        class=\"form-control form-control-alternative\" \n                                        \n                                        v-model=\"newEstimate.taskDescription\"></textarea>\n                                    </base-input>\n                                </div>\n                                </div>\n                            </div>\n                                <p v-if=\"error && submitting\" class=\"error-message\">\n                                    ❗Please fill in all fields\n                                </p>\n                                <p v-if=\"success\" class=\"success-message\">\n                                    ✅ Request successfully sent\n                                </p>\n                                <div class=\"row  \">\n                                <div class=\"col text-left\">\n                                  <base-button class=\"shadow-none mt-4 cancel-color\" type=\"secondary\" @click=\"handleCancel\" >Cancel</base-button>\n                                </div>\n                                <!-- <base-button class=\"shadow-none mt-4\" type=\"primary\" @click=\"addEstimate\">Send request</base-button> -->\n                                <div class=\"col text-right\">\n                                  <base-button class=\"shadow-none mt-4\" type=\"primary\" id=\"save-draft\" @click=\"handleEditt(estimate._id)\">Edit request</base-button>\n                                  <base-button class=\"shadow-none mt-4\" type=\"primary\" id=\"submit\" @click=\"openSendRequestModel(estimate._id)\">Send request</base-button>\n                                </div>\n                                </div>\n                                <!-- <p>{{newEstimateId}}</p> -->\n                            </form>\n        \n</template>\n<script>\nimport axios from 'axios';\nimport flatPicker from \"vue-flatpickr-component\";\nimport \"flatpickr/dist/flatpickr.css\";\n// import AuthService from \"../../services/AuthService\";\nexport default {\n    name: 'edit-estimate-form',\n    components: {\n        flatPicker\n        },\n    props: {\n        // estimates: Array,\n        // type: {\n            // type: String\n        // },\n        estimateId: String\n        },\n    data(){\n        return{\n            selectedProject: '',\n            selectedDeveloper: '',\n            error: false,\n            submitting: false,\n            success: false,\n            projects: [],\n            developers: [],\n           \n        estimate:\n          {\n            selectedProject: '',\n            selectedDeveloper: '',\n            status: '',\n            statusType: '',\n            dueDate: '',\n            title: '',\n            taskDescription: '',\n          },\n        newEstimate:{\n            project: '',\n            developer: '',\n            status: '',\n            statusType: '',\n            dueDate: '',\n            title: '',\n            taskDescription: '',\n          }\n        }\n        \n    },\n     // automatically computed properties(functions) to validate form inputs \n    computed: {\n        // invalidProjectName(){\n        //     return this.estimate.project === ''\n        // },\n        // invalidDeveloper(){\n        //     return this.estimate.developers === ''\n        // },\n        // invalidDueDate(){\n        //     return this.estimate.dueDate === ''\n        // },\n        // invalidTitle(){\n        //     return this.estimate.title === ''\n        // },\n        // invalidTaskDescription(){\n        //     return this.estimate.taskDescription === ''\n        // }\n    },\n    methods: {\n                  handleEditt(estimateId){\n            this.submitting = true\n            this.clearForm()\n            \n           \n            // let newEstimateId = this.openEditModel(estimateId)\n            // console.log(newEstimateId)\n            console.log(estimateId)\n           \n            const editedEstimate = {\n                  project: this.newEstimate.project.id,\n                  developer: this.newEstimate.developer.id,\n                  dueDate: this.newEstimate.dueDate,\n                  title: this.newEstimate.title,\n                  taskDescription: this.newEstimate.taskDescription,\n                  projectManager: this.$store.getters.getUser.id\n              }\n             \n              console.log(editedEstimate)\n            axios.put(`api/estimate-request/` + estimateId , editedEstimate)\n                  .then((response) =>{\n                      console.log(response);\n                  })\n                  .catch((error) => {\n                      console.log(error);\n                  });\n                  this.success = true\n                  this.error = false\n     \n          },\n          handleCancel(){\n            this.editDraftModal = false\n          },\n                    async handleSendRequest(estimateId){\n            // let newEstimateId = this.openEditModel(estimateId)\n            let editedEstimate = {\n                  project: this.estimate.project.id,\n                  developer: this.estimate.developer.id,\n                  dueDate: this.estimate.dueDate,\n                  title: this.estimate.title,\n                  taskDescription: this.estimate.taskDescription,\n                  projectManager: this.$store.getters.getUser.id,\n                  status: this.estimate.status = \"Submitted\"\n              }\n              console.log(editedEstimate)\n            axios.put(`api/estimate-request/` + estimateId , editedEstimate)\n                  .then((response) =>{\n                      console.log(response);\n                  })\n                  .catch((error) => {\n                      console.log(error);\n                  });\n          },\n                    async handleSendRequest2(estimateId){\n            let newEstimateId = this.openSendRequestModel(estimateId)\n            \n            let editedEstimate = {\n                  status: this.estimate.status = \"Submitted\"\n              }\n            axios.put(`api/estimate-request/` + newEstimateId , editedEstimate)\n                  .then((response) =>{\n                      console.log(response);\n                  })\n                  .catch((error) => {\n                      console.log(error);\n                  });\n          },\n            \n    clearForm(){\n                this.success = false\n                this.error = false\n            },\n      handleSave() {\n      console.log('testing save' )\n      },  \n    },\n    async created(){\n      try{\n        const response = await axios.get(`api/projects`)\n        const resp = await axios.get(`api/users/developers`)\n        // const respons = await axios.get(`api/estimate-request/5e202bf35dfb7025a93e779d` )\n        // const res = await axios.get(`api/estimate-request/` + this.$route.params.id)\n        // this.estimates = res.data;\n        // this.estimate = res.data; \n        // console.log(res)\n        this.projects = response.data;\n        this.developers = resp.data;\n        // this.estimate = respons.data;\n        // window.location.reload();\n        // console.log(this.projects)\n        // console.log(this.estimate)\n        \n      }catch(e){\n        console.error(e)\n        \n      }\n      \n    },\n   \n    \n    \n}\n</script>\n<style scoped>\n[class*='-message'] {\n    font-weight: 500;\n  }\n  .error-message {\n    color: #d33c40;\n    text-align: left;\n  }\n  .success-message {\n    color: #32a95d;\n    text-align: left;\n  }\n</style>"]}]}