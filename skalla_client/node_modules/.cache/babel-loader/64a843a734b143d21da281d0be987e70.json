{"remainingRequest":"/media/beatrice/AA5A6A6A5A6A336D1/templates/1/new/Estimation-System/skalla_client/node_modules/thread-loader/dist/cjs.js!/media/beatrice/AA5A6A6A5A6A336D1/templates/1/new/Estimation-System/skalla_client/node_modules/babel-loader/lib/index.js!/media/beatrice/AA5A6A6A5A6A336D1/templates/1/new/Estimation-System/skalla_client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/media/beatrice/AA5A6A6A5A6A336D1/templates/1/new/Estimation-System/skalla_client/node_modules/vue-loader/lib/index.js??vue-loader-options!/media/beatrice/AA5A6A6A5A6A336D1/templates/1/new/Estimation-System/skalla_client/src/views/Login.vue?vue&type=script&lang=js&","dependencies":[{"path":"/media/beatrice/AA5A6A6A5A6A336D1/templates/1/new/Estimation-System/skalla_client/src/views/Login.vue","mtime":1579980148902},{"path":"/media/beatrice/AA5A6A6A5A6A336D1/templates/1/new/Estimation-System/skalla_client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/media/beatrice/AA5A6A6A5A6A336D1/templates/1/new/Estimation-System/skalla_client/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/media/beatrice/AA5A6A6A5A6A336D1/templates/1/new/Estimation-System/skalla_client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/media/beatrice/AA5A6A6A5A6A336D1/templates/1/new/Estimation-System/skalla_client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/media/beatrice/AA5A6A6A5A6A336D1/templates/1/new/Estimation-System/skalla_client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/media/beatrice/AA5A6A6A5A6A336D1/templates/1/new/Estimation-System/skalla_client/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/es6.regexp.match\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport router from \"../router\";\nimport AuthService from \"../services/AuthService\"; // import store from \"../store\";\n// Validating email and password\n\nvar validateEmail = function validateEmail(email) {\n  if (!email.length) {\n    return {\n      valid: false,\n      error: \"Email is required\"\n    };\n  }\n\n  if (!email.match(/^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(.\\w{2,3})+$/)) {\n    return {\n      valid: false,\n      error: \"Please, enter a valid email.\"\n    };\n  }\n\n  return {\n    valid: true,\n    error: null\n  };\n};\n\nvar validatePassword = function validatePassword(password) {\n  if (!password.length) {\n    return {\n      valid: false,\n      error: \"Password is required\"\n    };\n  }\n\n  if (password.length < 6) {\n    return {\n      valid: false,\n      error: \"Password is too short\"\n    };\n  }\n\n  return {\n    valid: true,\n    error: null\n  };\n};\n\nexport default {\n  name: \"Login\",\n  data: function data() {\n    return {\n      // error: false,\n      // submitting: false,\n      // success: false,\n      credentials: {\n        email: \"\",\n        password: \"\"\n      },\n      valid: true,\n      success: false,\n      errors: {},\n      message: null,\n      msg: \"\"\n    };\n  },\n  methods: {\n    signIn: function () {\n      var _signIn = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var validEmail, validPassword, response, token, user, role;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                this.errors = {}; //Validating input fields\n\n                validEmail = validateEmail(this.credentials.email);\n                this.errors.email = validEmail.error;\n\n                if (this.valid) {\n                  this.valid = validEmail.valid;\n                }\n\n                validPassword = validatePassword(this.credentials.password);\n                this.errors.password = validPassword.error;\n\n                if (this.valid) {\n                  this.valid = validPassword.valid;\n                } //sending captured data to the server\n\n\n                _context.next = 10;\n                return AuthService.login(this.credentials);\n\n              case 10:\n                response = _context.sent;\n                token = response.token;\n                user = response.user;\n                role = response.user.role; // const email = response.email\n                // console.log(response);\n                //console.log(role)\n\n                this.$store.dispatch('login', {\n                  token: token,\n                  user: user\n                }); // const role = response.data.role\n                // console.log(role)\n\n                if (role === 'Developer') {\n                  router.push('/pending-estimates');\n                } else if (role === 'Project Manager') {\n                  router.push('/estimates');\n                }\n\n                _context.next = 21;\n                break;\n\n              case 18:\n                _context.prev = 18;\n                _context.t0 = _context[\"catch\"](0);\n                this.msg = 'Wrong email or password';\n\n              case 21:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 18]]);\n      }));\n\n      function signIn() {\n        return _signIn.apply(this, arguments);\n      }\n\n      return signIn;\n    }() // const role = response.data.role\n    // console.log(role)\n    // if(role === 'Developer'){\n    //   router.push('/pendingEstimates')\n    // }else if(role === 'Project Manager'){\n    //   router.push('/estimates')\n    // }\n    // })\n    // .catch((error) => {\n    //     console.log(error);\n    // });\n\n  }\n};",{"version":3,"sources":["Login.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n        <div class=\"row justify-content-center\">\n        <div class=\"col-lg-5 col-md-7\">\n            <div class=\"card bg-secondary shadow border-0\">\n                <div class=\"card-header bg-transparent pb-0\">\n                    <div class=\"text-muted text-center mt-2 mb-3\"><small>Sign in with credentials</small></div>\n                </div>\n                <div class=\"card-body px-lg-5 py-lg-3\">\n                    <form method=\"POST\" role=\"form\" class=\"mb-1\" @submit.prevent=\"signIn\">\n                        <base-input class=\"input-group-alternative mb-3\"\n                                    placeholder=\"Email\"\n                                    addon-left-icon=\"ni ni-circle-08\"\n                                    v-model=\"credentials.email\"\n                                    :class=\"{ }\" \n                                    type=\"email\"\n                                    >\n                        </base-input>\n                        <div class=\"text-danger\">{{ errors.email }}</div>\n\n                        <base-input class=\"input-group-alternative\"\n                                    placeholder=\"Password\"\n                                    type=\"password\"\n                                    addon-left-icon=\"ni ni-lock-circle-open\"\n                                    v-model=\"credentials.password\"\n                                    :class=\"{  } \"\n                                    >\n                        </base-input>\n                        <div class=\"text-danger\">{{ errors.password }}</div>\n\n                        <base-checkbox class=\"custom-control-alternative text-left\" >\n                            <span class=\"text-muted\">Remember me</span>\n                        </base-checkbox>\n\n            <div class=\"text-center\">\n              <base-button\n                type=\"primary\"\n                class=\"shadow-none mt-3 mb-2 px-5 mx-7\"\n                id=\"signin\"\n                @click=\"signIn\"\n                >Sign in</base-button\n              >\n                  <p class=\"text-danger\" v-if=\"msg\">{{ msg }}</p>\n            </div>\n            </form>\n                </div>\n            </div>\n        </div>\n      </div>\n</template>\n<script>\nimport router from \"../router\";\nimport AuthService from \"../services/AuthService\";\n// import store from \"../store\";\n\n// Validating email and password\nconst validateEmail = email => {\n  if (!email.length) {\n    return { valid: false, error: \"Email is required\" };\n  }\n  if (!email.match(/^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(.\\w{2,3})+$/)) {\n    return { valid: false, error: \"Please, enter a valid email.\" };\n  }\n  return { valid: true, error: null };\n};\n\nconst validatePassword = password => {\n  if (!password.length) {\n    return { valid: false, error: \"Password is required\" };\n  }\n  if (password.length < 6) {\n    return { valid: false, error: \"Password is too short\" };\n  }\n  return { valid: true, error: null };\n};\n\nexport default {\n  name: \"Login\",\n  data() {\n    return {\n      // error: false,\n      // submitting: false,\n      // success: false,\n      credentials: {\n        email: \"\",\n        password: \"\"\n      },\n      valid: true,\n      success: false,\n      errors: {},\n      message: null,\n      msg: \"\"\n    };\n  },\n  methods: {\n    async signIn() {\n      try {\n        this.errors = {};\n        //Validating input fields\n        const validEmail = validateEmail(this.credentials.email);\n        this.errors.email = validEmail.error;\n        if (this.valid) {\n          this.valid = validEmail.valid;\n        }\n        const validPassword = validatePassword(this.credentials.password);\n        this.errors.password = validPassword.error;\n        if (this.valid) {\n          this.valid = validPassword.valid;\n        }\n        //sending captured data to the server\n      \n        const response = await AuthService.login(this.credentials);\n\n        const token = response.token;\n        const user = response.user;\n        const role = response.user.role;\n\n        // const email = response.email\n\n        // console.log(response);\n\n        //console.log(role)\n\n              this.$store.dispatch('login', { token, user});\n              \n\n                // const role = response.data.role\n                // console.log(role)\n                if(role === 'Developer'){\n                  router.push('/pending-estimates')\n                }else if(role === 'Project Manager'){\n                  router.push('/estimates')\n                }\n       }catch (error) {\n              \n              this.msg = 'Wrong email or password'\n              \n            }\n\n\n      \n    }\n\n    // const role = response.data.role\n    // console.log(role)\n    // if(role === 'Developer'){\n    //   router.push('/pendingEstimates')\n    // }else if(role === 'Project Manager'){\n    //   router.push('/estimates')\n    // }\n    // })\n    // .catch((error) => {\n    //     console.log(error);\n    // });\n  }\n};\n</script>\n<style>\n#signin {\n  /* margin-left: -15px; */\n  padding: 4px 16px;\n}\n.text-danger {\n  color: #dc3545 !important;\n}\n</style>\n"],"sourceRoot":"src/views"}]}