{"remainingRequest":"/media/beatrice/AA5A6A6A5A6A336D1/templates/1/new/Estimation-System/skalla_client/node_modules/babel-loader/lib/index.js!/media/beatrice/AA5A6A6A5A6A336D1/templates/1/new/Estimation-System/skalla_client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/media/beatrice/AA5A6A6A5A6A336D1/templates/1/new/Estimation-System/skalla_client/node_modules/vue-loader/lib/index.js??vue-loader-options!/media/beatrice/AA5A6A6A5A6A336D1/templates/1/new/Estimation-System/skalla_client/src/views/Tables/ListOfDraftEstimateRequestsTable.vue?vue&type=script&lang=js&","dependencies":[{"path":"/media/beatrice/AA5A6A6A5A6A336D1/templates/1/new/Estimation-System/skalla_client/src/views/Tables/ListOfDraftEstimateRequestsTable.vue","mtime":1580895733969},{"path":"/media/beatrice/AA5A6A6A5A6A336D1/templates/1/new/Estimation-System/skalla_client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/media/beatrice/AA5A6A6A5A6A336D1/templates/1/new/Estimation-System/skalla_client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/media/beatrice/AA5A6A6A5A6A336D1/templates/1/new/Estimation-System/skalla_client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/media/beatrice/AA5A6A6A5A6A336D1/templates/1/new/Estimation-System/skalla_client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/media/beatrice/AA5A6A6A5A6A336D1/templates/1/new/Estimation-System/skalla_client/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/es6.function.name\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// import EditDraftEstimateRequestForm from \"../Forms/EditDraftEstimateRequestForm\";\nimport flatPicker from \"vue-flatpickr-component\";\nimport \"flatpickr/dist/flatpickr.css\";\nimport { format } from 'date-fns';\nimport axios from 'axios';\nexport default {\n  name: 'drafts-estimates-table',\n  components: {\n    flatPicker: flatPicker //  EditDraftEstimateRequestForm,\n\n  },\n  props: {\n    estimates: Array,\n    type: {\n      type: String\n    },\n    title: String\n  },\n  data: function data() {\n    return {\n      editDraftModal: false,\n      sendEstimateRequest: false,\n      // selectedProject: '',\n      // selectedDeveloper: '',\n      error: false,\n      submitting: false,\n      success: false,\n      projects: [],\n      developers: [],\n      taskDescription: '',\n      // newEstimateId: '',\n      // estimate:\n      //   {\n      //     project: '',\n      //     developer: '',\n      //     status: '',\n      //     statusType: '',\n      //     dueDate: '',\n      //     title: '',\n      //     taskDescription: '',\n      //   },\n      newEstimate: {\n        project: '',\n        developer: '',\n        status: '',\n        statusType: '',\n        dueDate: '',\n        title: '',\n        taskDescription: ''\n      }\n    };\n  },\n  methods: {\n    openEditModel: function openEditModel(estimateId) {\n      this.editDraftModal = true; // this.estimateId\n\n      console.log(estimateId);\n      return estimateId;\n    },\n    handleEditt: function handleEditt(estimateId) {\n      var _this = this;\n\n      this.submitting = true;\n      this.clearForm();\n      var newEstimateId = this.openEditModel(estimateId);\n      console.log(newEstimateId);\n      var editedEstimate = {\n        project: this.newEstimate.project.id,\n        developer: this.newEstimate.developer.id,\n        dueDate: this.newEstimate.dueDate,\n        title: this.newEstimate.title,\n        taskDescription: this.newEstimate.taskDescription,\n        projectManager: this.$store.getters.getUser.id\n      };\n      console.log(editedEstimate);\n      axios.put(\"api/estimate-request/\" + newEstimateId, editedEstimate).then(function (response) {\n        console.log(response);\n\n        _this.estimates.push({\n          project: _this.response.project.name,\n          developer: response.developer.name,\n          dueDate: response.dueDate,\n          title: response.title,\n          taskDescription: response.taskDescription,\n          dateCreated: response.dateCreated,\n          status: response.status\n        });\n      }).catch(function (error) {\n        console.log(error);\n      });\n      this.success = true;\n      this.error = false;\n    },\n    handleCancel: function handleCancel() {\n      this.editDraftModal = false;\n    },\n    handleSendRequest: function () {\n      var _handleSendRequest = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee(estimateId) {\n        var newEstimateId, editedEstimate;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                newEstimateId = this.openEditModel(estimateId);\n                editedEstimate = {\n                  status: \"Submitted\"\n                };\n                console.log(editedEstimate);\n                axios.put(\"api/estimate-request/\" + newEstimateId, editedEstimate).then(function (response) {\n                  console.log(response);\n                }).catch(function (error) {\n                  console.log(error);\n                });\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function handleSendRequest(_x) {\n        return _handleSendRequest.apply(this, arguments);\n      }\n\n      return handleSendRequest;\n    }(),\n    openSendRequestModel: function openSendRequestModel(estimateId) {\n      this.sendEstimateRequest = true;\n      return estimateId;\n    },\n    handleSendRequest2: function () {\n      var _handleSendRequest2 = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2(estimateId) {\n        var editedEstimate;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                editedEstimate = {\n                  status: \"Submitted\"\n                };\n                axios.put(\"api/estimate-request/\" + estimateId, editedEstimate).then(function (response) {\n                  console.log(response);\n                }).catch(function (error) {\n                  console.log(error);\n                });\n\n              case 2:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function handleSendRequest2(_x2) {\n        return _handleSendRequest2.apply(this, arguments);\n      }\n\n      return handleSendRequest2;\n    }(),\n    clearForm: function clearForm() {\n      this.success = false;\n      this.error = false;\n    },\n    formatDate: function formatDate(dateCreated) {\n      return format(new Date(dateCreated), 'dd / MM / yyy');\n    }\n  },\n  created: function () {\n    var _created = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee3() {\n      var response, resp;\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              _context3.next = 3;\n              return axios.get(\"api/projects\");\n\n            case 3:\n              response = _context3.sent;\n              _context3.next = 6;\n              return axios.get(\"api/users/developers\");\n\n            case 6:\n              resp = _context3.sent;\n              this.projects = response.data;\n              this.developers = resp.data; // window.location.reload();\n              // console.log(this.projects)\n\n              _context3.next = 14;\n              break;\n\n            case 11:\n              _context3.prev = 11;\n              _context3.t0 = _context3[\"catch\"](0);\n              console.error(_context3.t0);\n\n            case 14:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, this, [[0, 11]]);\n    }));\n\n    function created() {\n      return _created.apply(this, arguments);\n    }\n\n    return created;\n  }()\n};",{"version":3,"sources":["ListOfDraftEstimateRequestsTable.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"card shadow\"\n       :class=\"type === 'dark' ? 'bg-default': ''\">\n    <div class=\"card-header border-0\"\n         :class=\"type === 'dark' ? 'bg-transparent': ''\">\n\n    </div>\n\n    <div class=\"table-responsive table-hover\">\n      <table class=\"table\">\n        <thead class=\"thead-light\">\n          <tr>\n            <th class=\"bgcolor\">Title</th>\n            <th class=\"bgcolor\">Project</th>\n            <th class=\"bgcolor\">Developer</th>\n            <th class=\"bgcolor\">Date Created</th>\n            <th class=\"bgcolor\"></th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr v-for=\"estimate in estimates\" :key=\"estimate.id\">\n          <td class=\"title\">\n            {{estimate.title}}\n          </td>\n\n          <td class=\"project\">\n            {{estimate.project.name}}\n          </td>\n          <td class=\"developer\">\n            {{estimate.developer.name}}\n          </td>\n          <td class=\"date-created\">\n            {{ formatDate(estimate.dateCreated) }}\n          </td>\n         \n          <td >\n            <span class=\"action-icons\">\n              <router-link  to=\"\" id=\"view\">\n                <i class=\"rounded-circle fas fa-pen\" aria-hidden=\"true\" id=\"my-icons\" @click=\"openEditModel(estimate._id)\"></i>\n              </router-link>\n              <modal :show.sync=\"editDraftModal\" >\n                      <template slot=\"header\">\n                          <h3 class=\"modal-title \" id=\"exampleModalLabel\">Edit Draft Estimate Request</h3>\n                      </template>\n                      <!-- Edit Draft Estimate Request Form -->\n                      <!-- <EditDraftEstimateRequestForm  /> -->\n                          <form method=\"POST\" role=\"form\" >\n                            <div >\n                                <div class=\"row\">\n                                <div class=\"col-sm-3\">          \n                                    <h6 class=\"heading-small text-muted mb-4 float-left\">Project</h6>\n                                </div>\n                                <div class=\"col-sm\">\n                                    <base-input alternative\n                                            ref=\"first\"\n                                            class=\"mb-3\"\n                                            placeholder=\"Add project here...\" \n                                            \n                                            @keypress=\"clearForm\"\n                                          >\n                                            <select class=\"custom-select\" id=\"inputGroupSelect01\" v-model=\"newEstimate.project\">\n                                            <option value=\"\" disabled>{{estimate.project.name}}</option>\n                                            <option v-for=\"project in projects\" v-bind:value=\"{id: project._id, name: project.name}\">{{project.name}}</option>\n                                            </select>\n                                </base-input>\n                                </div>\n                                </div>\n                                <div class=\"row\">\n                                <div class=\"col-sm-3\">\n                                    <h6 class=\"heading-small text-muted mb-4 float-left\">Assign to</h6>\n                                </div>\n                                <div class=\"col-sm\">\n                                    <base-input alternative\n                                            class=\"mb-3\"\n                                            placeholder=\"Add developer here...\"\n                                          \n                                            >\n                                            <select class=\"custom-select\" id=\"inputGroupSelect01\" v-model=\"newEstimate.developer\">\n                                                <option value=\"\" disabled>{{estimate.developer.name}}</option>\n                                                <option  v-for=\"developer in developers\" v-bind:value=\"{id: developer._id, name: developer.name}\"> {{developer.name}}</option>\n                                            </select>\n                                </base-input>\n                                <!-- <p>id: {{selectedProject.id}}</p>\n                                <p>name: {{selectedProject.name}}</p>\n                                <p>id: {{selectedDeveloper.id}}</p>\n                                <p>name: {{selectedDeveloper.name}}</p> -->\n\n                                </div>\n                                </div>\n                                <div class=\"row\">\n                                <div class=\"col-sm-3\">\n                                    <h6 class=\"heading-small text-muted mb-4 float-left\">Due Date</h6>\n                                </div>\n                                <div class=\"col-sm\">\n                                    <base-input addon-left-icon=\"ni ni-calendar-grid-58\">\n                                        <flat-picker slot-scope=\"{focus, blur}\"\n                                                    @on-open=\"focus\"\n                                                    @on-close=\"blur\"\n                                                    :config=\"{allowInput: true, dateFormat: 'd-m-Y'}\"\n                                                    :placeholder=\"[estimate.dueDate]\"\n                                                    class=\"form-control datepicker\"\n                                                    v-model=\"newEstimate.dueDate\"\n                                                    >\n                                        </flat-picker>\n                                    </base-input>\n                                </div>\n                                </div>\n                                <div class=\"row\">\n                                    <div class=\"col-sm-3\">\n                                        <h6 class=\"heading-small text-muted mb-4 float-left\">Title</h6>\n                                    </div>\n                                    <div class=\"col-sm\">\n                                        <base-input alternative\n                                                class=\"mb-3\"\n                                                :placeholder=\"[estimate.title]\"\n                                                v-model=\"newEstimate.title\"\n                                            >\n                                    </base-input>\n                                    </div>\n                                </div>\n                                <div class=\"row\">\n                                <div class=\"col-sm-5\">\n                                    <h6 class=\"heading-small text-muted mb-4 float-left\">Main Task Description </h6>\n                                </div>\n                                <div class=\"col-sm-12\">\n                                    <base-input alternative=\"\">\n                                        <textarea rows=\"4\" \n                                        class=\"form-control form-control-alternative\" \n                                        :placeholder=\"[estimate.taskDescription]\"\n                                        v-model=\"newEstimate.taskDescription\"></textarea>\n                                    </base-input>\n                                </div>\n                                </div>\n                            </div>\n                                <p v-if=\"error && submitting\" class=\"error-message\">\n                                    ❗Please fill in all fields\n                                </p>\n                                <p v-if=\"success\" class=\"success-message\">\n                                    ✅ Request successfully sent\n                                </p>\n                                <div class=\"row  \">\n                                <div class=\"col text-left\">\n                                  <base-button class=\"shadow-none mt-4 cancel-color\" type=\"secondary\" @click=\"handleCancel\" >Cancel</base-button>\n                                </div>\n                                <!-- <base-button class=\"shadow-none mt-4\" type=\"primary\" @click=\"addEstimate\">Send request</base-button> -->\n                                <div class=\"col text-right\">\n                                  <base-button class=\"shadow-none mt-4\" type=\"primary\" id=\"save-draft\" @click=\"handleEditt(estimate._id)\">Edit request</base-button>\n                                  <base-button class=\"shadow-none mt-4\" type=\"primary\" id=\"submit\" @click=\"handleSendRequest2(estimate._id)\">Send request</base-button>\n                                </div>\n                                </div>\n                                <!-- <p>{{newEstimateId}}</p> -->\n                            </form>\n                  </modal>\n            </span>\n             <!-- <span class=\"action-icons\" id=\"view\" >\n              <i class=\"rounded-circle ni ni-curved-next\" aria-hidden=\"true\" id=\"my-icons\" @click=\"handleSendRequest2(estimate._id)\"></i>\n              <p v-if=\"error && submitting\" class=\"error-message\">\n                  ❗Please fill in all fields\n              </p>\n              <p v-if=\"success\" class=\"success-message\">\n                  ✅ Request successfully sent\n              </p>\n            </span> -->\n     \n            \n          </td>\n          </tr>\n        </tbody>\n\n      </table>\n    </div>\n\n    <div class=\"card-footer d-flex justify-content-end\"\n         :class=\"type === 'dark' ? 'bg-transparent': ''\">\n      <base-pagination></base-pagination>\n    </div>\n\n  </div>\n</template>\n<script>\n// import EditDraftEstimateRequestForm from \"../Forms/EditDraftEstimateRequestForm\";\nimport flatPicker from \"vue-flatpickr-component\";\nimport \"flatpickr/dist/flatpickr.css\";\nimport { format } from 'date-fns';\nimport axios from 'axios'\n  export default {\n    name: 'drafts-estimates-table',\n    components: {\n      flatPicker\n      //  EditDraftEstimateRequestForm,\n    },\n    props: {\n      estimates: Array,\n      type: {\n        type: String\n      },\n      title: String\n    },\n    data() {\n      return {\n        editDraftModal: false,\n        sendEstimateRequest: false,\n        // selectedProject: '',\n        // selectedDeveloper: '',\n        error: false,\n        submitting: false,\n        success: false,\n        projects: [],\n        developers: [],\n        taskDescription: '',\n        // newEstimateId: '',\n           \n        // estimate:\n        //   {\n        //     project: '',\n        //     developer: '',\n        //     status: '',\n        //     statusType: '',\n        //     dueDate: '',\n        //     title: '',\n        //     taskDescription: '',\n        //   },\n          newEstimate:{\n            project: '',\n            developer: '',\n            status: '',\n            statusType: '',\n            dueDate: '',\n            title: '',\n            taskDescription: '',\n          }\n      }\n    },\n    methods: {\n          openEditModel(estimateId){\n            this.editDraftModal = true\n            // this.estimateId\n            console.log(estimateId)\n            \n            return estimateId\n          },\n          handleEditt(estimateId){\n            this.submitting = true\n            this.clearForm()\n            \n           \n            let newEstimateId = this.openEditModel(estimateId)\n            console.log(newEstimateId)\n           \n            const editedEstimate = {\n                  project: this.newEstimate.project.id,\n                  developer: this.newEstimate.developer.id,\n                  dueDate: this.newEstimate.dueDate,\n                  title: this.newEstimate.title,\n                  taskDescription: this.newEstimate.taskDescription,\n                  projectManager: this.$store.getters.getUser.id\n              }\n             \n              console.log(editedEstimate)\n            axios.put(`api/estimate-request/` + newEstimateId , editedEstimate)\n                  .then((response) =>{\n                      console.log(response);\n                       this.estimates.push({\n                        project: this.response.project.name,\n                        developer: response.developer.name,\n                        dueDate: response.dueDate,\n                        title: response.title,\n                        taskDescription: response.taskDescription,\n                        dateCreated: response.dateCreated,\n                        status: response.status,\n                })\n                  })\n                  .catch((error) => {\n                      console.log(error);\n                  });\n                  this.success = true\n                  this.error = false\n               \n\n     \n          },\n          handleCancel(){\n            this.editDraftModal = false\n          },\n          \n          async handleSendRequest(estimateId){\n            let newEstimateId = this.openEditModel(estimateId)\n            let editedEstimate = {\n                  \n                  status: \"Submitted\"\n              }\n              console.log(editedEstimate)\n            axios.put(`api/estimate-request/` + newEstimateId , editedEstimate)\n                  .then((response) =>{\n                      console.log(response);\n                  })\n                  .catch((error) => {\n                      console.log(error);\n                  });\n          },\n          openSendRequestModel(estimateId){\n            this.sendEstimateRequest = true\n            return estimateId\n          },\n          async handleSendRequest2(estimateId){\n           \n            \n            let editedEstimate = {\n                  status: \"Submitted\"\n              }\n            axios.put(`api/estimate-request/` + estimateId , editedEstimate)\n                  .then((response) =>{\n                      console.log(response);\n                  })\n                  .catch((error) => {\n                      console.log(error);\n                  });\n          },\n          clearForm(){\n                this.success = false\n                this.error = false\n                },\n      formatDate: function(dateCreated){\n      return format(new Date(dateCreated), 'dd / MM / yyy')\n      }\n    },\n    async created(){\n      try{\n        const response = await axios.get(`api/projects`)\n        const resp = await axios.get(`api/users/developers`)\n        \n        this.projects = response.data;\n        this.developers = resp.data;\n        // window.location.reload();\n        // console.log(this.projects)\n      }catch(e){\n        console.error(e)\n        \n      }\n    },\n    \n  }\n</script>\n<style>\n#view{\n  color: #747273;\n  padding-left: 10px;\n}\n#left{\n  text-align: left;\n}\n/* Adding cursor to table */\n.table-row{\n  cursor:pointer;\n}\n.spacing{\n  padding-left: 16px;\n  padding-right: 16px;\n}\n/* Adjustments to font size of the table head content */\n.table thead th {\n  font-size: 13px;\n  font-weight: 700;\n}\n#save-draft{\n  background-color: #faf9f9;\n  color: #5e72e4;\n  border: 1px solid #5e72e4;\n}\n/* First column of table font adjustment */\n.text-sm {\n  font-weight: 400;\n  font-size: 13px !important;\n}\n/* styling rounded border */\n/* .rounded-circle {\n  border: 1px solid rgb(201, 201, 199);\n  padding: 6px;\n  \n} */\n/* Status column font size adjustment */\nspan .status{\n  font-size: 13px; \n}\n.bgcolor {  \n  background: #e7eaec !important;\n}\n/* displaying action icons on hover */\ntable > tbody > tr .action-icons{\n  visibility: hidden;\n}\ntable > tbody > tr:hover .action-icons{\n  visibility: visible;\n}\n/* .table{\n  width: 100%; \n}\n.card{\n  width: 79vw;\n} */\nbase-button{\n  border-radius: 4px;\n  \n}\n#details{\n  font-size: 17px;\n  color: rgb(17, 16, 19);\n}\n#my-icons {\n  background-color: #5e72e4;\n  border-color: #5e72e4;\n  color: #eee7eb;\n}\n#my-icons:hover {\n  background-color: #d10572;\n  border-color: #d10572;\n  color: #eee7eb;\n}\n/* Desktops and laptops ----------- */\n@media only screen  and (min-width : 1224px) {\n.card{\n  margin-top: 30px;\n}\n}\n</style>"],"sourceRoot":"src/views/Tables"}]}