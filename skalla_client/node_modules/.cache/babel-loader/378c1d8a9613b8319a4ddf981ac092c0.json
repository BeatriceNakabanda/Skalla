{"remainingRequest":"/media/beatrice/AA5A6A6A5A6A336D1/templates/1/new/Estimation-System/skalla_client/node_modules/babel-loader/lib/index.js!/media/beatrice/AA5A6A6A5A6A336D1/templates/1/new/Estimation-System/skalla_client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/media/beatrice/AA5A6A6A5A6A336D1/templates/1/new/Estimation-System/skalla_client/node_modules/vue-loader/lib/index.js??vue-loader-options!/media/beatrice/AA5A6A6A5A6A336D1/templates/1/new/Estimation-System/skalla_client/src/views/Forms/EditEstimateForm.vue?vue&type=script&lang=js&","dependencies":[{"path":"/media/beatrice/AA5A6A6A5A6A336D1/templates/1/new/Estimation-System/skalla_client/src/views/Forms/EditEstimateForm.vue","mtime":1580896018792},{"path":"/media/beatrice/AA5A6A6A5A6A336D1/templates/1/new/Estimation-System/skalla_client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/media/beatrice/AA5A6A6A5A6A336D1/templates/1/new/Estimation-System/skalla_client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/media/beatrice/AA5A6A6A5A6A336D1/templates/1/new/Estimation-System/skalla_client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/media/beatrice/AA5A6A6A5A6A336D1/templates/1/new/Estimation-System/skalla_client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/media/beatrice/AA5A6A6A5A6A336D1/templates/1/new/Estimation-System/skalla_client/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport axios from 'axios';\nimport flatPicker from \"vue-flatpickr-component\";\nimport \"flatpickr/dist/flatpickr.css\"; // import AuthService from \"../../services/AuthService\";\n\nexport default {\n  name: 'edit-estimate-form',\n  components: {\n    flatPicker: flatPicker\n  },\n  props: {\n    // estimates: Array,\n    // type: {\n    // type: String\n    // },\n    estimateId: String\n  },\n  data: function data() {\n    return {\n      selectedProject: '',\n      selectedDeveloper: '',\n      error: false,\n      submitting: false,\n      success: false,\n      projects: [],\n      developers: [],\n      estimate: {\n        selectedProject: '',\n        selectedDeveloper: '',\n        status: '',\n        statusType: '',\n        dueDate: '',\n        title: '',\n        taskDescription: ''\n      },\n      newEstimate: {\n        project: '',\n        developer: '',\n        status: '',\n        statusType: '',\n        dueDate: '',\n        title: '',\n        taskDescription: ''\n      }\n    };\n  },\n  // automatically computed properties(functions) to validate form inputs \n  computed: {// invalidProjectName(){\n    //     return this.estimate.project === ''\n    // },\n    // invalidDeveloper(){\n    //     return this.estimate.developers === ''\n    // },\n    // invalidDueDate(){\n    //     return this.estimate.dueDate === ''\n    // },\n    // invalidTitle(){\n    //     return this.estimate.title === ''\n    // },\n    // invalidTaskDescription(){\n    //     return this.estimate.taskDescription === ''\n    // }\n  },\n  methods: {\n    handleEditt: function handleEditt(estimateId) {\n      this.submitting = true;\n      this.clearForm(); // let newEstimateId = this.openEditModel(estimateId)\n      // console.log(newEstimateId)\n\n      console.log(estimateId);\n      var editedEstimate = {\n        project: this.newEstimate.project.id,\n        developer: this.newEstimate.developer.id,\n        dueDate: this.newEstimate.dueDate,\n        title: this.newEstimate.title,\n        taskDescription: this.newEstimate.taskDescription,\n        projectManager: this.$store.getters.getUser.id\n      };\n      console.log(editedEstimate);\n      axios.put(\"api/estimate-request/\" + estimateId, editedEstimate).then(function (response) {\n        console.log(response);\n      }).catch(function (error) {\n        console.log(error);\n      });\n      this.success = true;\n      this.error = false;\n    },\n    handleCancel: function handleCancel() {\n      this.editDraftModal = false;\n    },\n    handleSendRequest: function () {\n      var _handleSendRequest = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee(estimateId) {\n        var editedEstimate;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                // let newEstimateId = this.openEditModel(estimateId)\n                editedEstimate = {\n                  project: this.estimate.project.id,\n                  developer: this.estimate.developer.id,\n                  dueDate: this.estimate.dueDate,\n                  title: this.estimate.title,\n                  taskDescription: this.estimate.taskDescription,\n                  projectManager: this.$store.getters.getUser.id,\n                  status: this.estimate.status = \"Submitted\"\n                };\n                console.log(editedEstimate);\n                axios.put(\"api/estimate-request/\" + estimateId, editedEstimate).then(function (response) {\n                  console.log(response);\n                }).catch(function (error) {\n                  console.log(error);\n                });\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function handleSendRequest(_x) {\n        return _handleSendRequest.apply(this, arguments);\n      }\n\n      return handleSendRequest;\n    }(),\n    handleSendRequest2: function () {\n      var _handleSendRequest2 = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2(estimateId) {\n        var newEstimateId, editedEstimate;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                newEstimateId = this.openSendRequestModel(estimateId);\n                editedEstimate = {\n                  status: this.estimate.status = \"Submitted\"\n                };\n                axios.put(\"api/estimate-request/\" + newEstimateId, editedEstimate).then(function (response) {\n                  console.log(response);\n                }).catch(function (error) {\n                  console.log(error);\n                });\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function handleSendRequest2(_x2) {\n        return _handleSendRequest2.apply(this, arguments);\n      }\n\n      return handleSendRequest2;\n    }(),\n    clearForm: function clearForm() {\n      this.success = false;\n      this.error = false;\n    },\n    handleSave: function handleSave() {\n      console.log('testing save');\n    }\n  },\n  created: function () {\n    var _created = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee3() {\n      var response, resp;\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              _context3.next = 3;\n              return axios.get(\"api/projects\");\n\n            case 3:\n              response = _context3.sent;\n              _context3.next = 6;\n              return axios.get(\"api/users/developers\");\n\n            case 6:\n              resp = _context3.sent;\n              // const respons = await axios.get(`api/estimate-request/5e202bf35dfb7025a93e779d` )\n              // const res = await axios.get(`api/estimate-request/` + this.$route.params.id)\n              // this.estimates = res.data;\n              // this.estimate = res.data; \n              // console.log(res)\n              this.projects = response.data;\n              this.developers = resp.data; // this.estimate = respons.data;\n              // window.location.reload();\n              // console.log(this.projects)\n              // console.log(this.estimate)\n\n              _context3.next = 14;\n              break;\n\n            case 11:\n              _context3.prev = 11;\n              _context3.t0 = _context3[\"catch\"](0);\n              console.error(_context3.t0);\n\n            case 14:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, this, [[0, 11]]);\n    }));\n\n    function created() {\n      return _created.apply(this, arguments);\n    }\n\n    return created;\n  }()\n};",{"version":3,"sources":["EditEstimateForm.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiHA,OAAA,KAAA,MAAA,OAAA;AACA,OAAA,UAAA,MAAA,yBAAA;AACA,OAAA,8BAAA,C,CACA;;AACA,eAAA;AACA,EAAA,IAAA,EAAA,oBADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA,UAAA,EAAA;AADA,GAFA;AAKA,EAAA,KAAA,EAAA;AACA;AACA;AACA;AACA;AACA,IAAA,UAAA,EAAA;AALA,GALA;AAYA,EAAA,IAZA,kBAYA;AACA,WAAA;AACA,MAAA,eAAA,EAAA,EADA;AAEA,MAAA,iBAAA,EAAA,EAFA;AAGA,MAAA,KAAA,EAAA,KAHA;AAIA,MAAA,UAAA,EAAA,KAJA;AAKA,MAAA,OAAA,EAAA,KALA;AAMA,MAAA,QAAA,EAAA,EANA;AAOA,MAAA,UAAA,EAAA,EAPA;AASA,MAAA,QAAA,EACA;AACA,QAAA,eAAA,EAAA,EADA;AAEA,QAAA,iBAAA,EAAA,EAFA;AAGA,QAAA,MAAA,EAAA,EAHA;AAIA,QAAA,UAAA,EAAA,EAJA;AAKA,QAAA,OAAA,EAAA,EALA;AAMA,QAAA,KAAA,EAAA,EANA;AAOA,QAAA,eAAA,EAAA;AAPA,OAVA;AAmBA,MAAA,WAAA,EAAA;AACA,QAAA,OAAA,EAAA,EADA;AAEA,QAAA,SAAA,EAAA,EAFA;AAGA,QAAA,MAAA,EAAA,EAHA;AAIA,QAAA,UAAA,EAAA,EAJA;AAKA,QAAA,OAAA,EAAA,EALA;AAMA,QAAA,KAAA,EAAA,EANA;AAOA,QAAA,eAAA,EAAA;AAPA;AAnBA,KAAA;AA8BA,GA3CA;AA4CA;AACA,EAAA,QAAA,EAAA,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfA,GA7CA;AA8DA,EAAA,OAAA,EAAA;AACA,IAAA,WADA,uBACA,UADA,EACA;AACA,WAAA,UAAA,GAAA,IAAA;AACA,WAAA,SAAA,GAFA,CAKA;AACA;;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,UAAA;AAEA,UAAA,cAAA,GAAA;AACA,QAAA,OAAA,EAAA,KAAA,WAAA,CAAA,OAAA,CAAA,EADA;AAEA,QAAA,SAAA,EAAA,KAAA,WAAA,CAAA,SAAA,CAAA,EAFA;AAGA,QAAA,OAAA,EAAA,KAAA,WAAA,CAAA,OAHA;AAIA,QAAA,KAAA,EAAA,KAAA,WAAA,CAAA,KAJA;AAKA,QAAA,eAAA,EAAA,KAAA,WAAA,CAAA,eALA;AAMA,QAAA,cAAA,EAAA,KAAA,MAAA,CAAA,OAAA,CAAA,OAAA,CAAA;AANA,OAAA;AASA,MAAA,OAAA,CAAA,GAAA,CAAA,cAAA;AACA,MAAA,KAAA,CAAA,GAAA,CAAA,0BAAA,UAAA,EAAA,cAAA,EACA,IADA,CACA,UAAA,QAAA,EAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,QAAA;AACA,OAHA,EAIA,KAJA,CAIA,UAAA,KAAA,EAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,KAAA;AACA,OANA;AAOA,WAAA,OAAA,GAAA,IAAA;AACA,WAAA,KAAA,GAAA,KAAA;AAEA,KA9BA;AA+BA,IAAA,YA/BA,0BA+BA;AACA,WAAA,cAAA,GAAA,KAAA;AACA,KAjCA;AAkCA,IAAA,iBAlCA;AAAA;AAAA;AAAA,+CAkCA,UAlCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAmCA;AACA,gBAAA,cApCA,GAoCA;AACA,kBAAA,OAAA,EAAA,KAAA,QAAA,CAAA,OAAA,CAAA,EADA;AAEA,kBAAA,SAAA,EAAA,KAAA,QAAA,CAAA,SAAA,CAAA,EAFA;AAGA,kBAAA,OAAA,EAAA,KAAA,QAAA,CAAA,OAHA;AAIA,kBAAA,KAAA,EAAA,KAAA,QAAA,CAAA,KAJA;AAKA,kBAAA,eAAA,EAAA,KAAA,QAAA,CAAA,eALA;AAMA,kBAAA,cAAA,EAAA,KAAA,MAAA,CAAA,OAAA,CAAA,OAAA,CAAA,EANA;AAOA,kBAAA,MAAA,EAAA,KAAA,QAAA,CAAA,MAAA,GAAA;AAPA,iBApCA;AA6CA,gBAAA,OAAA,CAAA,GAAA,CAAA,cAAA;AACA,gBAAA,KAAA,CAAA,GAAA,CAAA,0BAAA,UAAA,EAAA,cAAA,EACA,IADA,CACA,UAAA,QAAA,EAAA;AACA,kBAAA,OAAA,CAAA,GAAA,CAAA,QAAA;AACA,iBAHA,EAIA,KAJA,CAIA,UAAA,KAAA,EAAA;AACA,kBAAA,OAAA,CAAA,GAAA,CAAA,KAAA;AACA,iBANA;;AA9CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAsDA,IAAA,kBAtDA;AAAA;AAAA;AAAA,gDAsDA,UAtDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAuDA,gBAAA,aAvDA,GAuDA,KAAA,oBAAA,CAAA,UAAA,CAvDA;AAyDA,gBAAA,cAzDA,GAyDA;AACA,kBAAA,MAAA,EAAA,KAAA,QAAA,CAAA,MAAA,GAAA;AADA,iBAzDA;AA4DA,gBAAA,KAAA,CAAA,GAAA,CAAA,0BAAA,aAAA,EAAA,cAAA,EACA,IADA,CACA,UAAA,QAAA,EAAA;AACA,kBAAA,OAAA,CAAA,GAAA,CAAA,QAAA;AACA,iBAHA,EAIA,KAJA,CAIA,UAAA,KAAA,EAAA;AACA,kBAAA,OAAA,CAAA,GAAA,CAAA,KAAA;AACA,iBANA;;AA5DA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAqEA,IAAA,SArEA,uBAqEA;AACA,WAAA,OAAA,GAAA,KAAA;AACA,WAAA,KAAA,GAAA,KAAA;AACA,KAxEA;AAyEA,IAAA,UAzEA,wBAyEA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,cAAA;AACA;AA3EA,GA9DA;AA2IA,EAAA,OA3IA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBA6IA,KAAA,CAAA,GAAA,gBA7IA;;AAAA;AA6IA,cAAA,QA7IA;AAAA;AAAA,qBA8IA,KAAA,CAAA,GAAA,wBA9IA;;AAAA;AA8IA,cAAA,IA9IA;AA+IA;AACA;AACA;AACA;AACA;AACA,mBAAA,QAAA,GAAA,QAAA,CAAA,IAAA;AACA,mBAAA,UAAA,GAAA,IAAA,CAAA,IAAA,CArJA,CAsJA;AACA;AACA;AACA;;AAzJA;AAAA;;AAAA;AAAA;AAAA;AA4JA,cAAA,OAAA,CAAA,KAAA;;AA5JA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,CAAA","sourcesContent":["<template>\n                          <form method=\"POST\" role=\"form\" >\n                            <div >\n                                <div class=\"row\">\n                                <div class=\"col-sm-3\">          \n                                    <h6 class=\"heading-small text-muted mb-4 float-left\">Project</h6>\n                                </div>\n                                <div class=\"col-sm\">\n                                    <base-input alternative\n                                            ref=\"first\"\n                                            class=\"mb-3\"\n                                            placeholder=\"Add project here...\" \n                                            \n                                            @keypress=\"clearForm\"\n                                          >\n                                            <select class=\"custom-select\" id=\"inputGroupSelect01\" v-model=\"newEstimate.project\">\n                                            <option value=\"\" disabled>Please select a project</option>\n                                            <option v-for=\"project in projects\" v-bind:value=\"{id: project._id, name: project.name}\">{{project.name}}</option>\n                                            </select>\n                                </base-input>\n                                </div>\n                                </div>\n                                <div class=\"row\">\n                                <div class=\"col-sm-3\">\n                                    <h6 class=\"heading-small text-muted mb-4 float-left\">Assign to</h6>\n                                </div>\n                                <div class=\"col-sm\">\n                                    <base-input alternative\n                                            class=\"mb-3\"\n                                            placeholder=\"Add developer here...\"\n                                          \n                                            >\n                                            <select class=\"custom-select\" id=\"inputGroupSelect01\" v-model=\"newEstimate.developer\">\n                                                <option value=\"\" disabled>Please select a developer</option>\n                                                <option  v-for=\"developer in developers\" v-bind:value=\"{id: developer._id, name: developer.name}\"> {{developer.name}}</option>\n                                            </select>\n                                </base-input>\n                                <!-- <p>id: {{selectedProject.id}}</p>\n                                <p>name: {{selectedProject.name}}</p>\n                                <p>id: {{selectedDeveloper.id}}</p>\n                                <p>name: {{selectedDeveloper.name}}</p> -->\n\n                                </div>\n                                </div>\n                                <div class=\"row\">\n                                <div class=\"col-sm-3\">\n                                    <h6 class=\"heading-small text-muted mb-4 float-left\">Due Date</h6>\n                                </div>\n                                <div class=\"col-sm\">\n                                    <base-input addon-left-icon=\"ni ni-calendar-grid-58\">\n                                        <flat-picker slot-scope=\"{focus, blur}\"\n                                                    @on-open=\"focus\"\n                                                    @on-close=\"blur\"\n                                                    :config=\"{allowInput: true, dateFormat: 'd-m-Y'}\"\n                                                    \n                                                    class=\"form-control datepicker\"\n                                                    :class=\"{ 'has-error': submitting  }\"\n                                                    v-model=\"newEstimate.dueDate\"\n                                                    >\n                                        </flat-picker>\n                                    </base-input>\n                                </div>\n                                </div>\n                                <div class=\"row\">\n                                    <div class=\"col-sm-3\">\n                                        <h6 class=\"heading-small text-muted mb-4 float-left\">Title</h6>\n                                    </div>\n                                    <div class=\"col-sm\">\n                                        <base-input alternative\n                                                class=\"mb-3\"\n                                                \n                                                v-model=\"newEstimate.title\"\n                                                :class=\"{ 'has-error': submitting  }\"\n                                            >\n                                    </base-input>\n                                    </div>\n                                </div>\n                                <div class=\"row\">\n                                <div class=\"col-sm-5\">\n                                    <h6 class=\"heading-small text-muted mb-4 float-left\">Main Task Description </h6>\n                                </div>\n                                <div class=\"col-sm-12\">\n                                    <base-input alternative=\"\"\n                                    :class=\"{ 'has-error': submitting }\">\n                                        <textarea rows=\"4\" \n                                        class=\"form-control form-control-alternative\" \n                                        \n                                        v-model=\"newEstimate.taskDescription\"></textarea>\n                                    </base-input>\n                                </div>\n                                </div>\n                            </div>\n                                <p v-if=\"error && submitting\" class=\"error-message\">\n                                    ❗Please fill in all fields\n                                </p>\n                                <p v-if=\"success\" class=\"success-message\">\n                                    ✅ Request successfully sent\n                                </p>\n                                <div class=\"row  \">\n                                <div class=\"col text-left\">\n                                  <base-button class=\"shadow-none mt-4 cancel-color\" type=\"secondary\" @click=\"handleCancel\" >Cancel</base-button>\n                                </div>\n                                <!-- <base-button class=\"shadow-none mt-4\" type=\"primary\" @click=\"addEstimate\">Send request</base-button> -->\n                                <div class=\"col text-right\">\n                                  <base-button class=\"shadow-none mt-4\" type=\"primary\" id=\"save-draft\" @click=\"handleEditt(estimate._id)\">Edit request</base-button>\n                                  <base-button class=\"shadow-none mt-4\" type=\"primary\" id=\"submit\" @click=\"openSendRequestModel(estimate._id)\">Send request</base-button>\n                                </div>\n                                </div>\n                                <!-- <p>{{newEstimateId}}</p> -->\n                            </form>\n        \n</template>\n<script>\nimport axios from 'axios';\nimport flatPicker from \"vue-flatpickr-component\";\nimport \"flatpickr/dist/flatpickr.css\";\n// import AuthService from \"../../services/AuthService\";\nexport default {\n    name: 'edit-estimate-form',\n    components: {\n        flatPicker\n        },\n    props: {\n        // estimates: Array,\n        // type: {\n            // type: String\n        // },\n        estimateId: String\n        },\n    data(){\n        return{\n            selectedProject: '',\n            selectedDeveloper: '',\n            error: false,\n            submitting: false,\n            success: false,\n            projects: [],\n            developers: [],\n           \n        estimate:\n          {\n            selectedProject: '',\n            selectedDeveloper: '',\n            status: '',\n            statusType: '',\n            dueDate: '',\n            title: '',\n            taskDescription: '',\n          },\n        newEstimate:{\n            project: '',\n            developer: '',\n            status: '',\n            statusType: '',\n            dueDate: '',\n            title: '',\n            taskDescription: '',\n          }\n        }\n        \n    },\n     // automatically computed properties(functions) to validate form inputs \n    computed: {\n        // invalidProjectName(){\n        //     return this.estimate.project === ''\n        // },\n        // invalidDeveloper(){\n        //     return this.estimate.developers === ''\n        // },\n        // invalidDueDate(){\n        //     return this.estimate.dueDate === ''\n        // },\n        // invalidTitle(){\n        //     return this.estimate.title === ''\n        // },\n        // invalidTaskDescription(){\n        //     return this.estimate.taskDescription === ''\n        // }\n    },\n    methods: {\n                  handleEditt(estimateId){\n            this.submitting = true\n            this.clearForm()\n            \n           \n            // let newEstimateId = this.openEditModel(estimateId)\n            // console.log(newEstimateId)\n            console.log(estimateId)\n           \n            const editedEstimate = {\n                  project: this.newEstimate.project.id,\n                  developer: this.newEstimate.developer.id,\n                  dueDate: this.newEstimate.dueDate,\n                  title: this.newEstimate.title,\n                  taskDescription: this.newEstimate.taskDescription,\n                  projectManager: this.$store.getters.getUser.id\n              }\n             \n              console.log(editedEstimate)\n            axios.put(`api/estimate-request/` + estimateId , editedEstimate)\n                  .then((response) =>{\n                      console.log(response);\n                  })\n                  .catch((error) => {\n                      console.log(error);\n                  });\n                  this.success = true\n                  this.error = false\n     \n          },\n          handleCancel(){\n            this.editDraftModal = false\n          },\n                    async handleSendRequest(estimateId){\n            // let newEstimateId = this.openEditModel(estimateId)\n            let editedEstimate = {\n                  project: this.estimate.project.id,\n                  developer: this.estimate.developer.id,\n                  dueDate: this.estimate.dueDate,\n                  title: this.estimate.title,\n                  taskDescription: this.estimate.taskDescription,\n                  projectManager: this.$store.getters.getUser.id,\n                  status: this.estimate.status = \"Submitted\"\n              }\n              console.log(editedEstimate)\n            axios.put(`api/estimate-request/` + estimateId , editedEstimate)\n                  .then((response) =>{\n                      console.log(response);\n                  })\n                  .catch((error) => {\n                      console.log(error);\n                  });\n          },\n                    async handleSendRequest2(estimateId){\n            let newEstimateId = this.openSendRequestModel(estimateId)\n            \n            let editedEstimate = {\n                  status: this.estimate.status = \"Submitted\"\n              }\n            axios.put(`api/estimate-request/` + newEstimateId , editedEstimate)\n                  .then((response) =>{\n                      console.log(response);\n                  })\n                  .catch((error) => {\n                      console.log(error);\n                  });\n          },\n            \n    clearForm(){\n                this.success = false\n                this.error = false\n            },\n      handleSave() {\n      console.log('testing save' )\n      },  \n    },\n    async created(){\n      try{\n        const response = await axios.get(`api/projects`)\n        const resp = await axios.get(`api/users/developers`)\n        // const respons = await axios.get(`api/estimate-request/5e202bf35dfb7025a93e779d` )\n        // const res = await axios.get(`api/estimate-request/` + this.$route.params.id)\n        // this.estimates = res.data;\n        // this.estimate = res.data; \n        // console.log(res)\n        this.projects = response.data;\n        this.developers = resp.data;\n        // this.estimate = respons.data;\n        // window.location.reload();\n        // console.log(this.projects)\n        // console.log(this.estimate)\n        \n      }catch(e){\n        console.error(e)\n        \n      }\n      \n    },\n   \n    \n    \n}\n</script>\n<style scoped>\n[class*='-message'] {\n    font-weight: 500;\n  }\n  .error-message {\n    color: #d33c40;\n    text-align: left;\n  }\n  .success-message {\n    color: #32a95d;\n    text-align: left;\n  }\n</style>"],"sourceRoot":"src/views/Forms"}]}