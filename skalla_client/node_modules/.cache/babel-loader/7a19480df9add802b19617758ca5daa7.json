{"remainingRequest":"/media/beatrice/AA5A6A6A5A6A336D1/templates/1/new/Estimation-System/skalla_client/node_modules/thread-loader/dist/cjs.js!/media/beatrice/AA5A6A6A5A6A336D1/templates/1/new/Estimation-System/skalla_client/node_modules/babel-loader/lib/index.js!/media/beatrice/AA5A6A6A5A6A336D1/templates/1/new/Estimation-System/skalla_client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/media/beatrice/AA5A6A6A5A6A336D1/templates/1/new/Estimation-System/skalla_client/node_modules/vue-loader/lib/index.js??vue-loader-options!/media/beatrice/AA5A6A6A5A6A336D1/templates/1/new/Estimation-System/skalla_client/src/views/Forms/AddProjectForm.vue?vue&type=script&lang=js&","dependencies":[{"path":"/media/beatrice/AA5A6A6A5A6A336D1/templates/1/new/Estimation-System/skalla_client/src/views/Forms/AddProjectForm.vue","mtime":1580896358387},{"path":"/media/beatrice/AA5A6A6A5A6A336D1/templates/1/new/Estimation-System/skalla_client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/media/beatrice/AA5A6A6A5A6A336D1/templates/1/new/Estimation-System/skalla_client/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/media/beatrice/AA5A6A6A5A6A336D1/templates/1/new/Estimation-System/skalla_client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/media/beatrice/AA5A6A6A5A6A336D1/templates/1/new/Estimation-System/skalla_client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/media/beatrice/AA5A6A6A5A6A336D1/templates/1/new/Estimation-System/skalla_client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/media/beatrice/AA5A6A6A5A6A336D1/templates/1/new/Estimation-System/skalla_client/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/es6.function.name\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport axios from \"axios\";\nvar baseURL = \"api/project\";\nexport default {\n  name: \"add-project-form\",\n  data: function data() {\n    return {\n      error: false,\n      submitting: false,\n      success: false,\n      project: {\n        name: \"\"\n      }\n    };\n  },\n  computed: {\n    invalidProjectName: function invalidProjectName() {\n      return this.project.name === '';\n    }\n  },\n  methods: {\n    addProject: function () {\n      var _addProject = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var res;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.clearForm(); //Adding submitting status\n\n                this.submitting = true; //checking whether user is submiting empty project name\n\n                if (!this.invalidProjectName) {\n                  _context.next = 5;\n                  break;\n                }\n\n                this.error = true;\n                return _context.abrupt(\"return\");\n\n              case 5:\n                _context.next = 7;\n                return axios.post(baseURL, {\n                  name: this.project.name\n                });\n\n              case 7:\n                res = _context.sent;\n                this.name = \"\";\n                this.success = true;\n                this.error = false;\n                this.submitting = false;\n\n              case 12:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function addProject() {\n        return _addProject.apply(this, arguments);\n      }\n\n      return addProject;\n    }(),\n    clearForm: function clearForm() {\n      this.success = false;\n      this.error = false;\n    }\n  }\n};",{"version":3,"sources":["AddProjectForm.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiCA,OAAA,KAAA,MAAA,OAAA;AACA,IAAA,OAAA,GAAA,aAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,kBADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,KAAA,EAAA,KADA;AAEA,MAAA,UAAA,EAAA,KAFA;AAGA,MAAA,OAAA,EAAA,KAHA;AAIA,MAAA,OAAA,EAAA;AACA,QAAA,IAAA,EAAA;AADA;AAJA,KAAA;AASA,GAZA;AAaA,EAAA,QAAA,EAAA;AACA,IAAA,kBADA,gCACA;AACA,aAAA,KAAA,OAAA,CAAA,IAAA,KAAA,EAAA;AACA;AAHA,GAbA;AAkBA,EAAA,OAAA,EAAA;AACA,IAAA,UADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,qBAAA,SAAA,GAFA,CAGA;;AACA,qBAAA,UAAA,GAAA,IAAA,CAJA,CAOA;;AAPA,qBAQA,KAAA,kBARA;AAAA;AAAA;AAAA;;AASA,qBAAA,KAAA,GAAA,IAAA;AATA;;AAAA;AAAA;AAAA,uBAYA,KAAA,CAAA,IAAA,CAAA,OAAA,EAAA;AACA,kBAAA,IAAA,EAAA,KAAA,OAAA,CAAA;AADA,iBAAA,CAZA;;AAAA;AAYA,gBAAA,GAZA;AAgBA,qBAAA,IAAA,GAAA,EAAA;AAEA,qBAAA,OAAA,GAAA,IAAA;AACA,qBAAA,KAAA,GAAA,KAAA;AACA,qBAAA,UAAA,GAAA,KAAA;;AApBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAsBA,IAAA,SAtBA,uBAsBA;AACA,WAAA,OAAA,GAAA,KAAA;AACA,WAAA,KAAA,GAAA,KAAA;AACA;AAzBA;AAlBA,CAAA","sourcesContent":["<template>\n  <form role=\"form\" method=\"POST\" >\n    <div class=\"row\">\n      <div class=\"col-sm-4\">\n        <h6 class=\"heading-small text-muted mb-4\">Project Name</h6>\n      </div>\n      <div class=\"col-sm\">\n        <base-input\n          alternative\n          :class=\"{ 'has-error': submitting && invalidProjectName }\"\n          ref=\"first\" \n          placeholder=\"Add project name here...\"\n          v-model=\"project.name\"\n          @keypress=\"clearForm\"\n        >\n        </base-input>\n      </div>\n    </div>\n      <p v-if=\"error && submitting\" class=\"error-message\">\n        ❗Please add project name\n      </p>\n      <p v-if=\"success\" class=\"success-message\">\n        ✅ Project successfully added\n      </p>\n    <base-button\n      class=\"shadow-none cancel-color\"\n      type=\"secondary\"\n      @click=\"modal1 = false\"\n      >Close</base-button>\n    <base-button class=\"shadow-none\" type=\"primary\" @click=\"addProject\">Add</base-button>\n  </form>\n</template>\n<script>\nimport axios from \"axios\";\nconst baseURL = \"api/project\";\n\nexport default {\n  name: \"add-project-form\",\n  data() {\n    return {  \n      error: false,\n      submitting: false,\n      success: false,\n      project: {\n        name: \"\"\n      },\n      \n    };\n  },\n    computed:{\n    invalidProjectName(){\n      return this.project.name === ''\n    }\n  },\n  methods: {\n    async addProject() {\n      this.clearForm()\n      //Adding submitting status\n      this.submitting = true\n      \n      \n      //checking whether user is submiting empty project name\n      if ( this.invalidProjectName ){\n        this.error = true\n        return\n      }\n      const res = await axios.post(baseURL, {\n        name: this.project.name\n        \n      });\n      this.name = \"\";\n    \n      this.success = true\n      this.error = false\n      this.submitting = false\n    },\n    clearForm(){\n      this.success = false\n      this.error = false\n    }\n  }\n};\n</script>\n<style  scoped>\n  [class*='-message'] {\n    font-weight: 500;\n  }\n\n  .error-message {\n    color: #d33c40;\n  }\n\n  .success-message {\n    color: #32a95d;\n  }\n</style>\n"],"sourceRoot":"src/views/Forms"}]}